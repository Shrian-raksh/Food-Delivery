1Ô∏è‚É£ Frontend (Angular)
üõ† Admin Portal
Login Page

Dashboard with CRUD for:

Restaurants

Dishes

AuthGuard for route protection

JWT Authentication

üõ† End-User Portal
Restaurant listing

View dishes for a selected restaurant

Filtering by cuisine, location, price range

üì¶ Tech Stack:

Angular

Angular Material or Bootstrap for UI

Angular HTTP Client for API calls

RxJS Observables for async data

2Ô∏è‚É£ Backend (Spring Boot - Java)
Microservices:
User Service (Register/Login)

Restaurant Service

Dish Service

Order Service

Payment (Mock)

üì¶ Tech Stack:

Spring Boot

Spring Security with JWT

Spring Data JPA

3Ô∏è‚É£ Database Schema (MySQL)
sql
Copy
Edit
-- USERS
CREATE TABLE users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  username VARCHAR(50) UNIQUE,
  password VARCHAR(255),
  role ENUM('ADMIN', 'USER') DEFAULT 'USER'
);

-- RESTAURANTS
CREATE TABLE restaurants (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(100),
  description TEXT,
  location VARCHAR(100),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- DISHES
CREATE TABLE dishes (
  id INT AUTO_INCREMENT PRIMARY KEY,
  restaurant_id INT,
  name VARCHAR(100),
  price DECIMAL(10,2),
  FOREIGN KEY (restaurant_id) REFERENCES restaurants(id)
);

-- ORDERS
CREATE TABLE orders (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT,
  total DECIMAL(10,2),
  status ENUM('PENDING', 'COMPLETED') DEFAULT 'PENDING',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(id)
);
4Ô∏è‚É£ Dockerize the App
‚úÖ Dockerfile for Angular

‚úÖ Dockerfile for Spring Boot

‚úÖ docker-compose.yml to manage both containers (and MySQL)

5Ô∏è‚É£ Jenkins CI/CD Pipeline
Jenkinsfiles for both Angular and Java projects

Use GitHub Webhooks to trigger pipeline

Build ‚Üí Test ‚Üí Docker Build ‚Üí Push to DockerHub ‚Üí Deploy to EC2

6Ô∏è‚É£ AWS Deployment
Launch EC2

Install Docker, Jenkins, Java, Node.js

Pull images from DockerHub or build from GitHub

Run containers (Spring Boot, Angular, MySQL)

üß© Optional Enhancements
Payment Integration (dummy)

User Order History

Email Notifications with Spring Boot Mail

Admin Analytics Dashboard (charts with ngx-charts)

üì¶ Deliverables Checklist

Module	Status
Angular Frontend (Admin + User)	‚¨úÔ∏è
Spring Boot Backend (Microservices)	‚¨úÔ∏è
MySQL Schema	‚¨úÔ∏è
Dockerfiles	‚¨úÔ∏è
Jenkinsfile	‚¨úÔ∏è
AWS Deployment (EC2)	‚¨úÔ∏è
CI/CD Pipeline